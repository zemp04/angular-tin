{"version":3,"file":"OpenAPI.cjs.js","sources":["../src/Streaming.ts","../src/OpenAPI.ts"],"sourcesContent":["import { EventEmitter } from 'events';\r\nimport WebSocket from 'ws';\r\nimport {\r\n  CandleStreaming,\r\n  CandleStreamingMetaParams,\r\n  Depth,\r\n  Dict,\r\n  InstrumentInfoStreaming,\r\n  InstrumentInfoStreamingMetaParams,\r\n  Interval,\r\n  OrderbookStreaming,\r\n  OrderbookStreamingMetaParams,\r\n  SocketEventType,\r\n  StreamingError,\r\n} from './types';\r\n\r\n/**\r\n * @hidden\r\n */\r\nconst enum ReadyState {\r\n  'CONNECTING',\r\n  'OPEN',\r\n  'CLOSING',\r\n  'CLOSED',\r\n}\r\n\r\n/**\r\n * @hidden\r\n */\r\nexport default class Streaming extends EventEmitter {\r\n  private _ws: WebSocket | null = null;\r\n  private _wsPingTimeout?: NodeJS.Timeout;\r\n  private _wsQueue: object[] = [];\r\n  private _subscribeMessages: object[] = [];\r\n  private readonly socketURL: string;\r\n  private readonly secretToken: string;\r\n  private readonly authHeaders: any;\r\n\r\n  /**\r\n   *\r\n   * @param apiURL REST api url �� [������������](https://tinkoffcreditsystems.github.io/invest-openapi/env/)\r\n   * @param socketURL Streaming api url �� [������������](https://tinkoffcreditsystems.github.io/invest-openapi/env/)\r\n   * @param secretToken ����� ������� �� [��������� ������ �������](https://tinkoffcreditsystems.github.io/invest-openapi/auth/)\r\n   *\r\n   */\r\n  constructor({ url, secretToken }: { url: string; secretToken: string }) {\r\n    super();\r\n    this.socketURL = url;\r\n    this.secretToken = secretToken;\r\n    this.authHeaders = {\r\n      Authorization: 'Bearer ' + this.secretToken,\r\n      'Content-Type': 'application/json',\r\n    };\r\n  }\r\n\r\n  /**\r\n   * ����������� � �������\r\n   */\r\n  private connect() {\r\n    if (this._ws && [ReadyState.OPEN, ReadyState.CONNECTING].includes(this._ws.readyState)) {\r\n      return;\r\n    }\r\n\r\n    this._ws = new WebSocket(this.socketURL, {\r\n      handshakeTimeout: 4000,\r\n      perMessageDeflate: false,\r\n      headers: this.authHeaders,\r\n    });\r\n\r\n    this._ws.on('open', this.handleSocketOpen);\r\n    this._ws.on('message', this.handleSocketMessage);\r\n    this._ws.on('close', this.handleSocketClose);\r\n    this._ws.on('error', this.handleSocketError);\r\n  }\r\n\r\n  /**\r\n   * ���������� �������� ����������\r\n   */\r\n  private handleSocketOpen = (e: Event) => {\r\n    // ��������������� ��������\r\n    if (this._ws && this._subscribeMessages) {\r\n      this._wsQueue.length = 0;\r\n      this._subscribeMessages.forEach((msg) => {\r\n        this.enqueue(msg);\r\n      });\r\n    }\r\n\r\n    this.emit('socket-open', e);\r\n    this.dispatchWsQueue();\r\n    this.socketPingLoop();\r\n  };\r\n\r\n  /**\r\n   * ����������� �������� ������ �� ������\r\n   */\r\n  private socketPingLoop = () => {\r\n    if (this._ws) {\r\n      this._ws.ping('ping');\r\n\r\n      this._wsPingTimeout = setTimeout(this.socketPingLoop, 15000)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ���������� �������� ����������\r\n   */\r\n  private handleSocketClose = (e: Event) => {\r\n    this.emit('socket-close', e);\r\n    this.handleSocketError();\r\n  };\r\n\r\n  /**\r\n   * ���������� ������ � ��������������� ��� �������������\r\n   */\r\n  private handleSocketError = (e?: Error) => {\r\n    clearTimeout(this._wsPingTimeout!);\r\n    this.emit('socket-error', e);\r\n\r\n    if (!this._ws) {\r\n      return;\r\n    }\r\n\r\n    const isClosed = [ReadyState.CLOSING, ReadyState.CLOSED].includes(this._ws?.readyState!);\r\n\r\n    this._ws.off('open', this.handleSocketOpen);\r\n    this._ws.off('message', this.handleSocketMessage);\r\n    this._ws.off('close', this.handleSocketClose);\r\n    this._ws.off('error', this.handleSocketError);\r\n\r\n    if (isClosed) {\r\n      this._ws.terminate();\r\n      this._ws = null;\r\n      if (this._subscribeMessages.length) {\r\n        // �� ������ ��������� ���� ��� �������� ��������\r\n        this.connect();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * ���������� �������� ���������\r\n   */\r\n  private handleSocketMessage = (m: string) => {\r\n    const { event: type, payload, time: serverTime } = JSON.parse(m);\r\n\r\n    const otherFields = { serverTime };\r\n\r\n    if (type === 'error') {\r\n      this.emit('streaming-error', payload, otherFields);\r\n    } else {\r\n      this.emit(this.getEventName(type, payload), payload, otherFields);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * ��������� ����� ������\r\n   */\r\n  private getEventName(type: SocketEventType, params: Dict<string>) {\r\n    if (type === 'orderbook') {\r\n      return `${type}-${params.figi}-${params.depth}`;\r\n    }\r\n\r\n    if (type === 'candle') {\r\n      return `${type}-${params.figi}-${params.interval}`;\r\n    }\r\n\r\n    if (type === 'instrument_info') {\r\n      return `${type}-${params.figi}`;\r\n    }\r\n\r\n    if (type === 'error') {\r\n      return 'streaming-error';\r\n    }\r\n\r\n    throw new Error(`Unknown type: ${type}`);\r\n  }\r\n\r\n  /**\r\n   * ��������� ��������� � ������� �� �������� � �����\r\n   */\r\n  private enqueue(command: object) {\r\n    this._wsQueue.push(command);\r\n    this.dispatchWsQueue();\r\n  }\r\n\r\n  /**\r\n   * ������ ������� ��������� �� �������� � �����\r\n   */\r\n  private dispatchWsQueue() {\r\n    if (this._ws?.readyState === ReadyState.OPEN) {\r\n      const cb = () => this._wsQueue.length && this.dispatchWsQueue();\r\n\r\n      this._ws.send(JSON.stringify(this._wsQueue.shift()), cb);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * �������� �� ��������� ������ � ������\r\n   */\r\n  private subscribeToSocket({ type, ...params }: any, cb: Function) {\r\n    if (!this._ws) {\r\n      this.connect();\r\n    }\r\n    let eventName = this.getEventName(type, params);\r\n    const message = { event: `${type}:subscribe`, ...params };\r\n    if (!this.listenerCount(eventName)) {\r\n      this.enqueue(message);\r\n      this._subscribeMessages.push(message);\r\n    }\r\n\r\n    const handler = (x: any) => setImmediate(() => cb(x));\r\n\r\n    this.on(eventName, handler);\r\n\r\n    return () => {\r\n      this.off(eventName, handler);\r\n\r\n      if (!this.listenerCount(eventName)) {\r\n        this.enqueue({ event: `${type}:unsubscribe`, ...params });\r\n        const index = this._subscribeMessages.findIndex((msg) => msg === message);\r\n\r\n        if (index !== -1) {\r\n          this._subscribeMessages.splice(index, 1);\r\n        }\r\n        if (!this._subscribeMessages.length) {\r\n          this._ws?.close();\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  orderbook(\r\n    { figi, depth = 3 }: { figi: string; depth?: Depth },\r\n    cb: (x: OrderbookStreaming, metaParams: OrderbookStreamingMetaParams) => any = console.log\r\n  ) {\r\n    return this.subscribeToSocket({ type: 'orderbook', figi, depth }, cb);\r\n  }\r\n\r\n  /**\r\n   * ����� ��� �������� �� ������ �� �������� ������� �����������\r\n   * @example ��. ����� [[orderbook]]\r\n   * @param figi ������������� �����������\r\n   * @param interval �������� ��� �����\r\n   * @param cb ������� ��� ��������� ����� ������ �� �����\r\n   * @return ������� ��� ������ ��������\r\n   */\r\n  candle(\r\n    { figi, interval = '1min' }: { figi: string; interval?: Interval },\r\n    cb: (x: CandleStreaming, metaParams: CandleStreamingMetaParams) => any = console.log\r\n  ) {\r\n    return this.subscribeToSocket({ type: 'candle', figi, interval }, cb);\r\n  }\r\n\r\n  /**\r\n   * ����� ��� �������� �� ������ �� �����������\r\n   * @example ��. ����� [[orderbook]]\r\n   * @param figi ������������� �����������\r\n   * @param cb ������� ��� ��������� ����� ������ �� �����������\r\n   * @return ������� ��� ������ ��������\r\n   */\r\n  instrumentInfo({ figi }: { figi: string }, cb: (x: InstrumentInfoStreaming, metaParams: InstrumentInfoStreamingMetaParams) => any = console.log) {\r\n    return this.subscribeToSocket({ type: 'instrument_info', figi }, cb);\r\n  }\r\n\r\n  /**\r\n   * ����� ��� ��������� ������ �� ������� ���������\r\n   * @example ��. ����� [[onStreamingError]]\r\n   * @param cb\r\n   * @return ������� ��� ������ ��������\r\n   */\r\n  onStreamingError(cb: (x: StreamingError, metaParams: InstrumentInfoStreamingMetaParams) => any) {\r\n    this.on('streaming-error', cb);\r\n\r\n    return () => {\r\n      this.off('streaming-error', cb);\r\n    }\r\n  }\r\n}","import 'isomorphic-fetch';\r\nimport {\r\n  CandleResolution,\r\n  Candles,\r\n  Currencies,\r\n  MarketInstrument,\r\n  MarketInstrumentList,\r\n  MarketOrderRequest,\r\n  Operations,\r\n  Order,\r\n  Orderbook,\r\n  PlacedLimitOrder,\r\n  PlacedMarketOrder,\r\n  Portfolio,\r\n  PortfolioPosition,\r\n  SandboxSetCurrencyBalanceRequest,\r\n  SandboxSetPositionBalanceRequest,\r\n  LimitOrderRequest,\r\n  UserAccounts,\r\n} from './domain';\r\nimport {\r\n  CandleStreaming,\r\n  Depth,\r\n  HttpMethod,\r\n  InstrumentId,\r\n  Interval,\r\n  OrderbookStreaming,\r\n  FIGI,\r\n  InstrumentInfoStreaming,\r\n  InstrumentInfoStreamingMetaParams,\r\n  CandleStreamingMetaParams,\r\n  StreamingError,\r\n} from './types';\r\n/*import { URLSearchParams } from 'url';*/\r\nimport Streaming from './Streaming';\r\n\r\nexport * from './types';\r\nexport * from './domain';\r\n\r\nconst omitUndef = (x: object) => JSON.parse(JSON.stringify(x));\r\n\r\nfunction getQueryString(params: Record<string, string | number>) {\r\n  // must be a number https://github.com/microsoft/TypeScript/issues/32951\r\n  const searchParams = new URLSearchParams(omitUndef(params) as any).toString();\r\n\r\n  return searchParams.length ? `?${searchParams}` : '';\r\n}\r\n\r\ntype OpenApiConfig = {\r\n  apiURL: string;\r\n  socketURL: string;\r\n  secretToken: string;\r\n  brokerAccountId?: string;\r\n};\r\n\r\ntype RequestConfig<Q, B> = {\r\n  method?: HttpMethod;\r\n  query?: Q;\r\n  body?: B;\r\n};\r\n\r\nexport default class OpenAPI {\r\n  private _streaming: Streaming;\r\n  private _sandboxCreated: boolean = false;\r\n  private _currentBrokerAccountId: string | undefined = undefined;\r\n  private readonly apiURL: string;\r\n  private readonly secretToken: string;\r\n  private readonly authHeaders: any;\r\n\r\n  /**\r\n   *\r\n   * @param apiURL REST api url �� [������������](https://tinkoffcreditsystems.github.io/invest-openapi/env/)\r\n   * @param socketURL Streaming api url �� [������������](https://tinkoffcreditsystems.github.io/invest-openapi/env/)\r\n   * @param secretToken ����� ������� �� [��������� ������ �������](https://tinkoffcreditsystems.github.io/invest-openapi/auth/)\r\n   * @param brokerAccountId ����� ����� (�� ��������� - ��������)\r\n   */\r\n  constructor({ apiURL, socketURL, secretToken, brokerAccountId }: OpenApiConfig) {\r\n    this._streaming = new Streaming({ url: socketURL, secretToken });\r\n    this._currentBrokerAccountId = brokerAccountId;\r\n    this.apiURL = apiURL;\r\n    this.secretToken = secretToken;\r\n    this.authHeaders = {\r\n      Authorization: 'Bearer ' + this.secretToken,\r\n      'Content-Type': 'application/json',\r\n    };\r\n  }\r\n\r\n  /**\r\n   * ������ � REST\r\n   */\r\n  private async makeRequest<Q, B, R>( url: string, { method = 'get', query, body }: RequestConfig<Q, B> = {}): Promise<R> {\r\n    let requestParams: Record<string, any> = { method, headers: this.authHeaders };\r\n    let requestUrl = this.apiURL + url + getQueryString(query || {});\r\n\r\n    if (method === 'post') {\r\n      requestParams.body = JSON.stringify(body);\r\n    }\r\n\r\n    const res = await fetch(requestUrl, requestParams);\r\n\r\n    // XXX ��� ��������������� ������ �� API\r\n    if (res.status === 401) {\r\n      throw {\r\n        status: 'Error',\r\n        message:\r\n          'Unauthorized! Try to use valid token. https://tinkoffcreditsystems.github.io/invest-openapi/auth/',\r\n      };\r\n    }\r\n\r\n    if (res.status === 429) {\r\n      throw {\r\n        status: 'Error',\r\n        message:\r\n          'Too Many Requests!',\r\n      };\r\n    }\r\n\r\n    if (!res.ok) {\r\n      throw await res.json();\r\n    }\r\n\r\n    const data = await res.json();\r\n\r\n    return data.payload;\r\n  }\r\n\r\n  /**\r\n   * ����������� ���������\r\n   */\r\n  private sandboxRegister() {\r\n    if (!this._sandboxCreated) {\r\n      this.makeRequest('/sandbox/register', { method: 'post' });\r\n      this._sandboxCreated = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ����� ���������� ������� ����� ����� (*undefined* - �������� �� ��������� ��� ����� ��������).\r\n   */\r\n  getCurrentAccountId(): string | undefined {\r\n    return this._currentBrokerAccountId;\r\n  }\r\n\r\n  /**\r\n   * ����� ��� ���������� ������ ����� �� ���������.\r\n   * @param brokerAccountId - ����� �����. ��� ����� �������� ����� ����� �������� �������� *undefined*.\r\n   */\r\n  setCurrentAccountId(brokerAccountId: string | undefined): void {\r\n    this._currentBrokerAccountId = brokerAccountId;\r\n  }\r\n\r\n  /**\r\n   * ����� ��� ������� ���������\r\n   */\r\n  async sandboxClear(): Promise<any> {\r\n    await this.sandboxRegister();\r\n    return this.makeRequest('/sandbox/clear', {\r\n      method: 'post',\r\n      query: { brokerAccountId: this._currentBrokerAccountId },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ����� ��� ������� ������� �� �������\r\n   * @param params ��. �������� ����\r\n   */\r\n  async setPositionBalance(params: SandboxSetPositionBalanceRequest): Promise<void> {\r\n    await this.sandboxRegister();\r\n    return this.makeRequest('/sandbox/positions/balance', {\r\n      method: 'post',\r\n      query: { brokerAccountId: this._currentBrokerAccountId },\r\n      body: params,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ����� ��� ������� ������� �� �������\r\n   * @param params ��. �������� ����\r\n   */\r\n  async setCurrenciesBalance(params: SandboxSetCurrencyBalanceRequest): Promise<void> {\r\n    await this.sandboxRegister();\r\n    return this.makeRequest('/sandbox/currencies/balance', {\r\n      method: 'post',\r\n      query: { brokerAccountId: this._currentBrokerAccountId },\r\n      body: params,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ����� ��� ��������� �������� ��\r\n   */\r\n  portfolio(): Promise<Portfolio> {\r\n    return this.makeRequest('/portfolio', {\r\n      query: { brokerAccountId: this._currentBrokerAccountId },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ����� ��� ��������� �������� ������� �������\r\n   */\r\n  portfolioCurrencies(): Promise<Currencies> {\r\n    return this.makeRequest('/portfolio/currencies', {\r\n      query: { brokerAccountId: this._currentBrokerAccountId },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ����� ��� ��������� ������ �� ����������� � ��������\r\n   * @param params ��. �������� ����\r\n   */\r\n  instrumentPortfolio(params: InstrumentId): Promise<PortfolioPosition | null> {\r\n    return this.portfolio().then((x) => {\r\n      return (\r\n        x.positions.find((position) => {\r\n          if ('figi' in params) {\r\n            return position.figi === params.figi;\r\n          }\r\n          if ('ticker' in params) {\r\n            return position.ticker === params.ticker;\r\n          }\r\n        }) || null\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ����� ��� ����������� ������\r\n   * @param figi ������������� �����������\r\n   * @param lots ���������� ����� ��� ������\r\n   * @param operation ��� ������\r\n   * @param price ���� �������� ������\r\n   */\r\n  limitOrder({\r\n    figi,\r\n    lots,\r\n    operation,\r\n    price,\r\n  }: LimitOrderRequest & FIGI): Promise<PlacedLimitOrder> {\r\n    return this.makeRequest('/orders/limit-order', {\r\n      method: 'post',\r\n      query: {\r\n        figi,\r\n        brokerAccountId: this._currentBrokerAccountId,\r\n      },\r\n      body: {\r\n        lots,\r\n        operation,\r\n        price,\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ����� ��� ����������� ������\r\n   * @param figi ������������� �����������\r\n   * @param lots ���������� ����� ��� ������\r\n   * @param operation ��� ������\r\n   * @param price ���� �������� ������\r\n   */\r\n  marketOrder({ figi, lots, operation }: MarketOrderRequest & FIGI): Promise<PlacedMarketOrder> {\r\n    return this.makeRequest('/orders/market-order', {\r\n      method: 'post',\r\n      query: {\r\n        figi,\r\n        brokerAccountId: this._currentBrokerAccountId,\r\n      },\r\n      body: {\r\n        lots,\r\n        operation,\r\n      },\r\n    });\r\n  }\r\n\r\n  //todo ����������\r\n  /**\r\n   * ����� ��� ������ �������� ������\r\n   * @param orderId ������������� ������\r\n   */\r\n  cancelOrder({ orderId }: { orderId: string }): Promise<void> {\r\n    return this.makeRequest(`/orders/cancel`, {\r\n      method: 'post',\r\n      query: {\r\n        orderId,\r\n        brokerAccountId: this._currentBrokerAccountId,\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ����� ��� ��������� ���� �������� ������\r\n   */\r\n  orders(): Promise<Order[]> {\r\n    return this.makeRequest('/orders', {\r\n      query: { brokerAccountId: this._currentBrokerAccountId },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ����� ��� ��������� ���� ��������� �������� ������������\r\n   */\r\n  currencies(): Promise<MarketInstrumentList> {\r\n    return this.makeRequest('/market/currencies');\r\n  }\r\n\r\n  /**\r\n   * ����� ��� ��������� ���� ��������� �������� ETF\r\n   */\r\n  etfs(): Promise<MarketInstrumentList> {\r\n    return this.makeRequest('/market/etfs');\r\n  }\r\n\r\n  /**\r\n   * ����� ��� ��������� ���� ��������� ���������\r\n   */\r\n  bonds(): Promise<MarketInstrumentList> {\r\n    return this.makeRequest('/market/bonds');\r\n  }\r\n\r\n  /**\r\n   * ����� ��� ��������� ���� ��������� �����\r\n   */\r\n  stocks(): Promise<MarketInstrumentList> {\r\n    return this.makeRequest('/market/stocks');\r\n  }\r\n\r\n  /**\r\n   * ����� ��� ��������� �������� �� �� �� �����������\r\n   * @param from ������ ���������� ���������� � ������� ISO 8601\r\n   * @param to ����� ���������� ���������� � ������� ISO 8601\r\n   * @param figi Figi-������������� �����������\r\n   */\r\n  operations({ from, to, figi }: { from: string; to: string; figi?: string }): Promise<Operations> {\r\n    return this.makeRequest('/operations', {\r\n      query: {\r\n        from,\r\n        to,\r\n        figi,\r\n        brokerAccountId: this._currentBrokerAccountId,\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ����� ��� ��������� ������������ ������ �� FIGI\r\n   * @param from ������ ���������� ���������� � ������� ISO 8601\r\n   * @param to ����� ���������� ���������� � ������� ISO 8601\r\n   * @param figi Figi-������������� �����������\r\n   * @param interval �������� ��� �����\r\n   */\r\n  candlesGet({\r\n    from,\r\n    to,\r\n    figi,\r\n    interval = '1min',\r\n  }: {\r\n    from: string;\r\n    to: string;\r\n    figi: string;\r\n    interval?: CandleResolution;\r\n  }): Promise<Candles> {\r\n    return this.makeRequest('/market/candles', {\r\n      query: { from, to, figi, interval },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ����� ��� ��������� �������\r\n   * @param figi Figi-������������� �����������\r\n   * @param depth\r\n   */\r\n  orderbookGet({ figi, depth = 3 }: { figi: string; depth?: Depth }): Promise<Orderbook> {\r\n    return this.makeRequest('/market/orderbook', {\r\n      query: { figi, depth },\r\n    });\r\n  }\r\n  /**\r\n   * ����� ��� ������ ������������ �� figi ��� ticker\r\n   * @param params { figi ��� ticker }\r\n   */\r\n  search(params: InstrumentId): Promise<MarketInstrumentList> {\r\n    if ('figi' in params) {\r\n      return this.makeRequest<any, never, MarketInstrument>('/market/search/by-figi', {\r\n        query: { figi: params.figi },\r\n      }).then((x) => (x ? { total: 1, instruments: [x] } : { total: 0, instruments: [] }));\r\n    }\r\n    if ('ticker' in params) {\r\n      return this.makeRequest('/market/search/by-ticker', {\r\n        query: { ticker: params.ticker },\r\n      });\r\n    }\r\n    throw new Error('should specify figi or ticker');\r\n  }\r\n\r\n  /**\r\n   * ����� ��� ������ ����������� �� figi ��� ticker\r\n   * @param params { figi ��� ticker }\r\n   */\r\n  searchOne(params: InstrumentId): Promise<MarketInstrument | null> {\r\n    return this.search(params).then((x) => x.instruments[0] || null);\r\n  }\r\n\r\n  /**\r\n   * ����� ��� �������� �� ������ �� ������� �����������\r\n   * @example\r\n   * ```typescript\r\n   * const { figi } = await api.searchOne({ ticker: 'AAPL' });\r\n   * const unsubFromAAPL = api.orderbook({ figi }, (ob) => { console.log(ob.bids) });\r\n   * // ... �������� ������ �� �����\r\n   * unsubFromAAPL();\r\n   * ```\r\n   * @param figi ������������� �����������\r\n   * @param depth\r\n   * @param cb ������� ��� ��������� ����� ������ �� �������\r\n   * @return ������� ��� ������ ��������\r\n   */\r\n  orderbook(\r\n    { figi, depth = 3 }: { figi: string; depth?: Depth },\r\n    cb: (x: OrderbookStreaming) => any = console.log\r\n  ) {\r\n    return this._streaming.orderbook({ figi, depth }, cb);\r\n  }\r\n\r\n  /**\r\n   * ����� ��� �������� �� ������ �� �������� ������� �����������\r\n   * @example ��. ����� [[orderbook]]\r\n   * @param figi ������������� �����������\r\n   * @param interval �������� ��� �����\r\n   * @param cb ������� ��� ��������� ����� ������ �� �����\r\n   * @return ������� ��� ������ ��������\r\n   */\r\n  candle(\r\n    { figi, interval = '1min' }: { figi: string; interval?: Interval },\r\n    cb: (x: CandleStreaming, metaParams: CandleStreamingMetaParams) => any = console.log\r\n  ) {\r\n    return this._streaming.candle({ figi, interval }, cb);\r\n  }\r\n\r\n  /**\r\n   * ����� ��� �������� �� ������ �� �����������\r\n   * @example ��. ����� [[orderbook]]\r\n   * @param figi ������������� �����������\r\n   * @param cb ������� ��� ��������� ����� ������ �� �����������\r\n   * @return ������� ��� ������ ��������\r\n   */\r\n  instrumentInfo({ figi }: { figi: string }, cb: (x: InstrumentInfoStreaming, metaParams: InstrumentInfoStreamingMetaParams) => any = console.log) {\r\n    return this._streaming.instrumentInfo({ figi }, cb);\r\n  }\r\n\r\n\r\n  /**\r\n   * ����� ��� ��������� ��������� �� ������ �� ���������\r\n   * @example\r\n   * ```typescript\r\n   * api.onStreamingError(({ error }) => { console.log(error) });\r\n   * api.instrumentInfo({ figi: 'NOOOOOOO' }, (ob) => { console.log(ob.bids) });\r\n   * // logs:  Subscription instrument_info:subscribe. FIGI NOOOOOOO not found\r\n   * ```\r\n   * @param cb ������� ��� ��������� ���� ������ �� ���������\r\n   * @return ������� ��� ������ ��������\r\n   */\r\n  onStreamingError(cb: (x: StreamingError, metaParams: InstrumentInfoStreamingMetaParams) => any) {\r\n    return this._streaming.onStreamingError(cb);\r\n  }\r\n\r\n  /**\r\n   * ����� ��� ��������� ���������� ������ �������\r\n   */\r\n  accounts(): Promise<UserAccounts> {\r\n    return this.makeRequest('/user/accounts');\r\n  }\r\n}"],"names":["EventEmitter","WebSocket"],"mappings":"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"}